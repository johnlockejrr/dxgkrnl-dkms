diff --git drivers/hv/dxgkrnl/dxgmodule.c drivers/hv/dxgkrnl/dxgmodule.c
index 9b28c2c3c..1360823b8 100644
--- /drivers/hv/dxgkrnl/dxgmodule.c
+++ /drivers/hv/dxgkrnl/dxgmodule.c
@@ -188,7 +188,11 @@ void signal_host_cpu_event(struct dxghostevent *eventhdr)
 	}
 	if (event->cpu_event) {
 		DXG_TRACE("signal cpu event");
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,6,0)
+		eventfd_signal(event->cpu_event);
+#else
 		eventfd_signal(event->cpu_event, 1);
+#endif
 		if (event->destroy_after_signal)
 			eventfd_ctx_put(event->cpu_event);
 	} else {
@@ -779,7 +783,7 @@ static int dxg_probe_vmbus(struct hv_device *hdev,
 
 	mutex_lock(&dxgglobal->device_mutex);
 
-	if (uuid_le_cmp(hdev->dev_type, dxg_vmbus_id_table[0].guid) == 0) {
+	if (guid_equal(&hdev->dev_type, &dxg_vmbus_id_table[0].guid)) {
 		/* This is a new virtual GPU channel */
 		guid_to_luid(&hdev->channel->offermsg.offer.if_instance, &luid);
 		DXG_TRACE("vGPU channel: %pUb",
@@ -794,8 +798,8 @@ static int dxg_probe_vmbus(struct hv_device *hdev,
 		list_add_tail(&vgpuch->vgpu_ch_list_entry,
 			      &dxgglobal->vgpu_ch_list_head);
 		dxgglobal_start_adapters();
-	} else if (uuid_le_cmp(hdev->dev_type,
-		   dxg_vmbus_id_table[1].guid) == 0) {
+	} else if (guid_equal(&hdev->dev_type,
+		   &dxg_vmbus_id_table[1].guid)) {
 		/* This is the global Dxgkgnl channel */
 		DXG_TRACE("Global channel: %pUb",
 			 &hdev->channel->offermsg.offer.if_instance);
@@ -820,7 +824,11 @@ static int dxg_probe_vmbus(struct hv_device *hdev,
 	return ret;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6,3,0)
+static void dxg_remove_vmbus(struct hv_device *hdev)
+#else
 static int dxg_remove_vmbus(struct hv_device *hdev)
+#endif
 {
 	int ret = 0;
 	struct dxgvgpuchannel *vgpu_channel;
@@ -828,7 +836,7 @@ static int dxg_remove_vmbus(struct hv_device *hdev)
 
 	mutex_lock(&dxgglobal->device_mutex);
 
-	if (uuid_le_cmp(hdev->dev_type, dxg_vmbus_id_table[0].guid) == 0) {
+	if (guid_equal(&hdev->dev_type, &dxg_vmbus_id_table[0].guid)) {
 		DXG_TRACE("Remove virtual GPU channel");
 		dxgglobal_stop_adapter_vmbus(hdev);
 		list_for_each_entry(vgpu_channel,
@@ -840,8 +848,8 @@ static int dxg_remove_vmbus(struct hv_device *hdev)
 				break;
 			}
 		}
-	} else if (uuid_le_cmp(hdev->dev_type,
-		   dxg_vmbus_id_table[1].guid) == 0) {
+	} else if (guid_equal(&hdev->dev_type,
+		   &dxg_vmbus_id_table[1].guid)) {
 		DXG_TRACE("Remove global channel device");
 		dxgglobal_destroy_global_channel();
 	} else {
@@ -852,7 +860,9 @@ static int dxg_remove_vmbus(struct hv_device *hdev)
 
 	mutex_unlock(&dxgglobal->device_mutex);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6,3,0)
 	return ret;
+#endif
 }
 
 MODULE_DEVICE_TABLE(vmbus, dxg_vmbus_id_table);
